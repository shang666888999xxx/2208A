1.GitHub官网  https://github.com/ 注：需注册邮箱注册账号

2.需下载Git官网下载64位配合使用

3.b站详细git教程  https://www.bilibili.com/video/BV1vy4y1s7k6?p=7&spm_id_from=pageDriver&vd_source=a57d4f68a121e909e67c52dfa448f03f
------------------------------------
3.git用法：

注册用户  git config --global user.name  （用户名）

 
注册邮箱 git config --global user.email  （密码名）


克隆仓库  git clone  远程仓库地址

查看gitbash版本 git --version

初始化本地库 git init  如果在一个文件夹用git必须初始化一下，否则没有权限使用库！

查看本地库状态 git status  可以查看是有提交的文件或没有

添加到暂存区 git add 文件名

提交本地库 git commit -m '日志信息' 提交的文件名

查看版本信息 git reflog

查看更详细的版本信息 git log

回退版本 git reset --hard commitID

版本穿梭  相当于你要跳到哪个分支则指针指向那个分支 git reset --hard 版本号（配合查看版本信息使用）

分支的操作

1.查看分支 git branch -v

2.切换分支 git checkout 分支名（切换哪个分支写哪个分支名）

3.创建分支 git branch 分支名（自己写一个分支名）

4.合并分支  把指定的分支合并到当前分支 git merge 分支名（要合并的分支名）

5.将新建的本地分支推送至远端 git push orgin 分支名

6.删除本地分支  git branch -d 分支名

7.删除远端分支 git push origin -d 分支名

远程仓库操作
1.查看当前所以远程地址别名： git remote -v
2.创建别名 ：git remote add 别名 远程地址
3.推送本地分支上的内容到远程仓库： git push 别名 分支
4.将远程仓库的内容克隆到本地 ： git clone 远程地址
5.将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并：git pull 远程仓库地址别名 远程分支名
6.推送本地分支到远程仓库：git oush 别名 分支
-------------------------------------------------------------------------------------
1.本地版本控制
优点：本地保存代码，方便个人操作，个人保管代码
缺点：一旦本地机器销毁，代码将会丢失
----------------------------------------
2.集中版本控制 svn
优点：所有的东西都放在服务器上，本地内存占用少
缺点：一旦中央服务器崩溃，代码将不存在和丢失
-------------------------------------------
3.分布式版本控制 githup
优点：每个人都是单独的一个服务器，所有的人都拥有完整代码历史记录，不管服务器怎么崩，代码始终都能找回
缺点：本地占用量高
-----------------------------------------------------------------------------------------
本地开发环境：devlpoment
测试环境：testing
灰度环境（备机，半线上）：staging--staging/replse
线上环境（全量，上机）:production--master
自己开发的时候，单独拉去自己的分支进行操作
------------------------------------------------------------
开发流程/测试流程
1.在自己分支开发完毕，自己完毕后，自测，联调
2.将代码合并到本地开发分支，development，解决冲突，进行自测
3.自测通过后，将本地分支代码，合并至测试分支，进行专业测试，测试人员进行测试
4.测试通过后，将代码合并至灰度环境分支，进行半线上测试，测试通过后
5.合并至线上环境，发布至线上
-----------------------------------------------------------------------------
SVN是一个版本控制系统，可用于管理软件源代码，文档等文件的版本控制，它使用一个中央仓库存储文件
多个用户通过将文件复制到本地，进行文件的修改，添加，删除等操作，所有文件的修改历史，版本信息都会被存储在
中央仓库中，用户可以随时从中央仓库更新到最新版本

1.svn使用集中式的版本控制模型，所有的数据都存在一个中央的服务器尚，而GIT使用分布式版本控制模型，
每个开发者都有自己的代码库和版本历史，不存在一个中心服务器

2.svn可以锁定文件，以防止另一个用户修改同一个文件，而git不会锁定文件，这意味着多个用户可以同时编辑同一个文件

3.svn中的分支和标签是复制执行，而在git中是通过指向具有特定版本的提交对象实现的，这使得git更加灵活和强大
